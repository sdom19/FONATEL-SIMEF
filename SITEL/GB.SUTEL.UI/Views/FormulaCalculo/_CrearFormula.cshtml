@using GB.SIMEF.Resources
@model GB.SIMEF.Entities.FormulaCalculo

@{ 
    bool modoVisualizacion = false;

    if (ViewBag.ModoFormulario.Equals(((int)Constantes.Accion.Visualizar).ToString()))
    {
        modoVisualizacion = true;
    }
}

<form id="formCrearFormula"> @*autocomplete="off"*@
    <div class="row">
        <div class="col-md-6 col-sm-10">
            <div class="form-group center">
                <label for="txtCodigoFormula" class="col-form-label">@EtiquetasViewFormulasCalculo.CrearFormula_LabelCodigo</label>

                @{ 
                    var htmlAttributes = new Dictionary<string, object>
                    {
                        { "id", "txtCodigoFormula" },
                        { "class" , "form-control form-control-fonatel alfa_numerico"},
                        { "maxlength", 30 },
                        { "placeholder", EtiquetasViewFormulasCalculo.CrearFormula_LabelCodigo }
                    };

                    if (ViewBag.ModoFormulario.Equals(((int)Constantes.Accion.Editar).ToString()) ||
                        modoVisualizacion == true)
                    {
                        htmlAttributes.Add("disabled", true);
                    }
                }

                @Html.EditorFor(model => Model.Codigo, new { htmlAttributes = htmlAttributes })
                <small id="txtCodigoFormulaHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center">
                <label for="txtNombreFormula" class="col-form-label">@EtiquetasViewFormulasCalculo.CrearFormula_LabelNombre</label>

                @{ 
                    var htmlAttrNombre = new Dictionary<string, object>
                    {
                        { "id", "txtNombreFormula" },
                        { "class" , "form-control form-control-fonatel alfa_numerico"},
                        { "maxlength", 500 },
                        { "placeholder", EtiquetasViewFormulasCalculo.CrearFormula_LabelNombre },
                        { modoVisualizacion ? "disabled":"true", "" }
                    };
                }

                @Html.EditorFor(model => Model.Nombre, new { htmlAttributes = htmlAttrNombre })
                <small id="txtNombreFormulaHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center">
                <label for="ddlFrecuenciaFormulario" class="col-form-label">@EtiquetasViewFormulasCalculo.CrearFormula_LabelFrecuencia</label>
                <div class="select2-wrapper">
                    @{ 
                        var htmlAttrFrecuencia = new Dictionary<string, object>
                        {
                            { "class", "listasDesplegables" },
                            { "id", "ddlFrecuenciaFormulario" },
                            { modoVisualizacion ? "disabled":"true", "" }
                        };
                    }

                    @Html.DropDownListFor(model => Model.IdFrecuenciaString, new SelectList(ViewBag.FrecuenciaEnvio, "id", "Nombre"), 
                                                    Etiquetas.PlaceholderDropDown, htmlAttrFrecuencia)
                </div>
                <small id="ddlFrecuenciaFormularioHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center">
                <label for="txtFechaCalculo" class="col-form-label">@EtiquetasViewFormulasCalculo.CrearFormula_LabelFechaCalculo</label>
                @{ 
                    var htmlAttrFechaCalculo = new Dictionary<string, object>
                    {
                        { "class", "form-control form-control-fonatel" },
                        { "id", "txtFechaCalculo" },
                        { modoVisualizacion ? "disabled":"true", "" }
                    };
                }
                @Html.EditorFor(model => Model.FechaCalculo, new { htmlAttributes = htmlAttrFechaCalculo })
                <small id="txtFechaCalculoHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center">
                <label for="txtDescripcionFormula" class="col-form-label">@EtiquetasViewFormulasCalculo.CrearFormula_LabelDescripcion</label>
                @{ 
                    var htmlAttrDescripcion = new Dictionary<string, object>
                    {
                        { "class", "form-control form-control-fonatel alfa_numerico" },
                        { "id", "txtDescripcionFormula" },
                        { "placeholder", EtiquetasViewFormulasCalculo.CrearFormula_LabelDescripcion },
                        { "maxlength", 1500 },
                        { modoVisualizacion ? "disabled":"true", "" }
                    };
                }
                @Html.EditorFor(model => Model.Descripcion, new { htmlAttributes = htmlAttrDescripcion })
                <small id="txtDescripcionFormulaHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>
        </div>

        <div class="col-md-6 col-sm-10">
            <div class="form-group center">
                <label for="ddlIndicadorFormulario" class="col-form-label ">@EtiquetasViewFormulasCalculo.CrearFormula_LabelIndicadorSalida</label>
                <div class="select2-wrapper">
                    @{ 
                        var htmlAttrIndicador = new Dictionary<string, object>
                        {
                            { "class", "listasDesplegables" },
                            { "id", "ddlIndicadorFormulario" },
                            { modoVisualizacion ? "disabled":"true", "" }
                        };
                    }
                    @Html.DropDownListFor(model => Model.IdIndicadorSalidaString, new SelectList(ViewBag.IndicadorSalida, "id", "Nombre"), 
                                                    Etiquetas.PlaceholderDropDown, htmlAttrIndicador)
                </div>
                <small id="ddlIndicadorFormularioHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center">
                <label for="ddlVariableFormulario" class="col-form-label ">@EtiquetasViewFormulasCalculo.CrearFormula_LabelVariableDato</label>
                <div class="select2-wrapper">
                    @{
                        var htmlAttrVariableDato = new Dictionary<string, object>
                        {
                            { "class", "listasDesplegables" },
                            { "id", "ddlVariableDatoFormula" },
                            { modoVisualizacion ? "disabled":"true", "" }
                        };
                    }
                    @Html.DropDownListFor(model => Model.IdVariableDatoString, new SelectList(ViewBag.VariablesDato, "id", "NombreVariable"),
                                                    Etiquetas.PlaceholderDropDown, htmlAttrVariableDato)
                </div>
                <small id="ddlVariableDatoFormulaHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center">
                <label for="ddlVariableFormulario" class="col-form-label ">@EtiquetasViewFormulasCalculo.CrearFormula_LabelNivelCalculo</label>
                <label class="radio-inline" style="display: block;">
                    @{ 
                        var htmlAttributesTotal = new Dictionary<string, object>
                        {
                            { "id", "radioTotal" },
                            { modoVisualizacion ? "disabled":"true", "" }
                        };

                        if (@Model.NivelCalculoTotal)
                        {
                            htmlAttributesTotal.Add("checked", true);
                        }
                    }

                    @Html.RadioButtonFor(model => model.NivelCalculoTotal, "nivelCalculo", htmlAttributesTotal)
                    @EtiquetasViewFormulasCalculo.CrearFormula_LabelNivelCalculoTotal
                </label>
                <label class="radio-inline mt-3" style="display: block;">
                    @{
                        var htmlAttributesCategoria = new Dictionary<string, object>
                                    {
                            { "id", "radioCategoriaDesagregacion" },
                            { modoVisualizacion ? "disabled":"true", "" }
                        };

                        if (!@Model.NivelCalculoTotal)
                        {
                            htmlAttributesCategoria.Add("checked", true);
                        }
                    }

                    @Html.RadioButtonFor(model => model.NivelCalculoTotal, "nivelCalculo", htmlAttributesCategoria)
                    @EtiquetasViewFormulasCalculo.CrearFormula_LabelCategoriaDesagregacion
                </label>
                <small id="radioNivelCalculoHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>

            <div class="form-group center" style="@(@Model.NivelCalculoTotal?"display: none;":"display: block;")" id="divInputCategoriaDesagregacion">
                <label for="ddlCategoriaDesagregacion" class="col-form-label ">@EtiquetasViewFormulasCalculo.CrearFormula_LabelCategoriaDesagregacion</label>
                <div class="select2-wrapper">
                    @{
                        var htmlAttrCategorias = new Dictionary<string, object>
                        {
                            { "class", "required listasDesplegables multiple-Select" },
                            { "id", "ddlCategoriaDesagregacion" },
                            { "multiple", "multiple" },
                            { "placeholder", Etiquetas.PlaceholderDropDown },
                            { modoVisualizacion ? "disabled":"true", "" }
                        };
                    }
                    @Html.DropDownListFor(model => Model.ListaCategoriasNivelesCalculo,
                                                    new SelectList(ViewBag.CategoriasDeIndicador, "id", "NombreCategoria"), htmlAttrCategorias)
                </div>
                <small id="ddlCategoriaDesagregacionHelp" class="form-text form-text-danger-fonatel" style="display: none;">@Etiquetas.CampoRequerido</small>
            </div>
        </div>

    </div>
    <div class="row mt-5">
        <div class="col-sm-12 text-center">
            @{
                string idBtnGuardar = string.Empty, idBtnSiguiente = string.Empty;
                string modoFormulario = ViewBag.ModoFormulario;

                if (modoFormulario.Equals(((int)Constantes.Accion.Insertar).ToString()))
                {
                    idBtnGuardar = "btnGuardarFormulaCalculo";
                    idBtnSiguiente = "btnSiguienteFormulaCalculo";
                }
                else if (modoFormulario.Equals(((int)Constantes.Accion.Editar).ToString()))
                {
                    idBtnGuardar = "btnGuardarEditarFormulaCalculo";
                    idBtnSiguiente = "btnSiguienteEditarFormulaCalculo";
                }
                else if (modoFormulario.Equals(((int)Constantes.Accion.Clonar).ToString()))
                {
                    idBtnGuardar = "btnGuardarClonarFormulaCalculo";
                    idBtnSiguiente = "btnSiguienteClonarFormulaCalculo";
                }
                else if (modoFormulario.Equals(((int)Constantes.Accion.Visualizar).ToString()))
                {
                    idBtnSiguiente = "btnSiguienteVisualizarFormulaCalculo";
                }
            }

            <button type="button" id="@idBtnGuardar" class="btn btn-fonatel btn-success-fonatel" @Html.Raw(modoVisualizacion ? "disabled" : "")>@Etiquetas.BotonGuardar</button>
            <button type="button" id="@idBtnSiguiente" class="btn btn-fonatel btn-next-fonatel">@Etiquetas.BotonSiguiente</button>
            <button type="button" id="btnCancelarFormula" class="btn btn-fonatel btn-error-fonatel">@Etiquetas.BotonCancelar</button>
        </div>
    </div>
</form>

