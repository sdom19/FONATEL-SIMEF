@model GB.SUTEL.Entities.SolicitudGeneral
@using GB.SUTEL.Entities.Metadata;

@{
    ViewBag.Title = "Editar Solicitud";
}

@*Links*@
<link href="~/Content/dropify-master/dropify-master/dist/css/dropify.css" rel="stylesheet" />
<link href="~/Content/sweetalert2-7.32.2/package/dist/sweetalert2.css" rel="stylesheet" />
<link href="~/Content/Mantenimiento.css" rel="stylesheet" />
<h2>@ViewBag.Title</h2>
<hr />
@*Formulario*@
<div class="row">
    <div class="col-md-6">
        <div class="form-horizontal">
            @Html.HiddenFor(model => model.IdSolicitud)
            @*Descripción*@
            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Fecha Inicio*@
            <div class="form-group">
                @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control", disabled = true } })
                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Fecha Final*@
            <div class="form-group">
                @Html.LabelFor(model => model.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaFinal, new { htmlAttributes = new { @class = "form-control", disabled = true } })
                    @Html.ValidationMessageFor(model => model.FechaFinal, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Activo*@
            <div class="form-group">
                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Activo)
                        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*Archivo*@
    <div class="col-md-6">

        @using (Html.BeginForm("Upload", "SolicitudGenerals", FormMethod.Post, new { enctype = "multipart/form-data", id = "formArchivos" }))
        {

            <div class="col-md-offset-2 col-md-8">
                <input type="file" class="dropify" name="file" id="file" data-default-file="@Model.Path" required />
            </div>
        }
    </div>
</div>
<br />
@*Acciones*@
<div>
    <button class="btn btn-default" onclick="salir();">Cancelar</button>
    <button class="btn azul-sutel" type="submit" onclick="guardar();">Guardar</button>
</div>
@*Scripts*@
<script src="~/Content/dropify-master/dropify-master/dist/js/dropify.js"></script>
<script src="~/Content/sweetalert2-7.32.2/package/dist/sweetalert2.min.js"></script>
<script>
    //Usar Dropify
    $('.dropify').dropify({
        messages: {
            'default': 'Arraste un archivo o haga click aquí',
            'replace': 'Arraste un archivo o haga click aquí para remplazar',
            'remove': 'Remover',
            'error': 'Incoveniente con la carga del archivo'
        }
    });

    //Función para guardar cambios
    function guardar() {
        //Obtener valores
        var IdSolicitud = $("#IdSolicitud").val();
        var Descripcion = $("#Descripcion").val();
        var Activo = $('#Activo')[0].checked;
        var form = $('#formArchivos')[0];
        var data = new FormData(form);
        //Validación tamaño
        if (Descripcion.length > 250) {
            Swal.fire('Excedió el límite de caracteres', 'No puede pasar de 250 caracteres', 'error');
        }
        else {
            //Guardar cambios
            $.ajax({
                url: "/SolicitudGenerals/Editar?IdSolicitud=" + IdSolicitud + "&Descripcion=" + Descripcion + "&Activo=" + Activo + "&file=" + data,
                type: 'POST',
                enctype: 'multipart/form-data',
                cache: false,
                data: data,
                processData: false,
                contentType: false,
                success: function (result) {
                    //Mensajes
                    if (result) {
                        Swal.fire({
                            title: 'La solicitud se guardó correctamente',
                            text: "",
                            type: 'success',
                        }).then((result) => {
                            if (result.value) {
                                window.location.href = "/SolicitudGenerals/Index";
                            }
                        })
                    }
                    else
                        Swal("La solicitud no se pudo actualizar", "", "error");
                },
                error: function (jqXHR, textStatus, error) {
                    Swal.fire("La solicitud no se pudo actualizar", "", "error");
                }
            });
        }
    }

    //Función para salir de edición
    function salir() {
        window.location.href = "/SolicitudGenerals/Index";
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
