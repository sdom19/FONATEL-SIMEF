@model GB.SUTEL.Entities.Usuario
@using GB.SUTEL.Entities.Metadata;
@if (ViewBag.Error != null)
{
    <div class="alert-danger">
        <span>@String.Format(ViewBag.Error.Message, ViewBag.Error.Id)</span>
    </div>
}
<form id="formCreate" method="post"
      action="@Url.Action("Editar")" data-ajax="true" data-ajax-target="#tableRol"
      data-ajax-message="Guardando datos...">

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        <h4>Editar Usuario</h4>
        <hr />
        @Html.HiddenFor(x => x.IdUsuario)
        @*Interno*@
        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioInterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsuarioInterno", new SelectList(new List<Tuple<int, string>>{new Tuple<int,string>(1,"Interno"),
           new Tuple<int,string>(0,"Externo")}, "Item1", "Item2"),
                     "Seleccione", htmlAttributes: new { @class = "form-control", disabled = "true" })
                @Html.ValidationMessageFor(model => model.UsuarioInterno, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.UsuarioInterno == Convert.ToByte(0))
        { 
            @*Nombre*@
            <div class="form-group tipoExterno">
                @Html.LabelFor(model => model.NombreUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Acceso de usuario ACCESO*@
            <div class="form-group tipoExterno">
                @Html.LabelFor(model => model.AccesoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccesoUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="text-danger field-validation-error" data-valmsg-for="NameRepeated" data-valmsg-replace="true"></span>
                    @Html.ValidationMessageFor(model => model.AccesoUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {            
            @*Acceso usuario AD*@
            <div class="form-group tipoInterno">
                @Html.LabelFor(model => model.AccesoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select disabled name="ACCESOAD" class="form-control">@*@Html.Raw(ViewBag.UsuariosAD)*@<option value="@Model.AccesoUsuario">@Model.AccesoUsuario</option></select>
                    <span class="text-danger field-validation-error" data-valmsg-for="NameRepeated" data-valmsg-replace="true"></span>
                    <span class="text-danger field-validation-error" data-valmsg-for="ACCESOAD" data-valmsg-replace="true"></span>
                </div>
            </div>
            @*Nombre*@
            <div class="form-group tipoExterno">
                @Html.LabelFor(model => model.NombreUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control" , disabled="true"} })
                    @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.UsuarioInterno == Convert.ToByte(0))
        {
            @*Correo*@
            <div class="form-group tipoExterno">
                @Html.LabelFor(model => model.CorreoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CorreoUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CorreoUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
            @* Operador *@
            <div class="form-group tipoExterno">
                @Html.LabelFor(model => model.IdOperador, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (ViewBag.Operadores != null)
                    {
                        @Html.DropDownList("IdOperador", new SelectList(ViewBag.Operadores, "IdOperador", "NombreOperador"), "Seleccione", htmlAttributes: new { @class = "form-control" })

                    }
                    else
                    {
                        <select name="IdOperador" class="form-control"><option value>Seleccione</option></select>
                    }
                    @Html.ValidationMessageFor(model => model.IdOperador, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @*Activo*@
        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{if (Model.Activo == 1)
                { <input type="checkbox" name="ISACTIVE" disabled=@ViewBag.UsuarioActual checked />}
                else
                {<input type="checkbox" name="ISACTIVE" disabled=@ViewBag.UsuarioActual />}
}
                @*@Html.CheckBox("Activo", true, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model =>model.Activo, "", new { @class = "text-danger" })*@
            </div>
        </div>



        @*Error*@
        <div class="form-group">
            <div class="alert alert-danger" hidden role="alert" name="error">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Cambios" class="btn btn-success" disabled=@ViewBag.UsuarioActual />
                @Html.ActionLink("Cancelar", "Index", "Usuarios", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
</form>
@section scripts{
    @Scripts.Render("~/Scripts/Seguridad/Usuarios/Edit.js")
    <script>
        jQuery.extend(jQuery.validator.messages, {
            email: "@GB.SUTEL.Entities.Metadata.EntityErrors.EmailAddress"
        });
        var accesoUsuario = "@Model.AccesoUsuario";
        var tipoInterno = @Model.UsuarioInterno;
    </script>
}