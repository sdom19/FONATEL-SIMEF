@model GB.SUTEL.Entities.RegistroIndicadorExterno
@using GB.SUTEL.Entities.Metadata;

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        @ViewBag.Error
    </div>
}
else
{
    <h4>Crear Registro de Indicador Externo</h4>
    <hr />
    <form id="formCreate" method="post"
          action="@Url.Action("Crear")" data-ajax="true" data-ajax-message="Guardando..." data-ajax-message-default="Crear">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal container">            
            @*Fuente*@
            <div class="form-group">
                <label class="control-label col-md-2">@GB.SUTEL.Entities.Metadata.EntityDisplays.Fuente</label>
                <div class="col-md-10">
                    <select name="IdFuenteExterna" class="form-control required">
                        <option value>Seleccione</option>
                        @foreach (var item in ViewBag.FuenteExterna)
                        {
                            <option value="@item.IdFuenteExterna">@item.NombreFuenteExterna</option>
                        }
                    </select>

                    <span class="text-danger field-validation-error" data-valmsg-for="IdFuenteExterna" data-valmsg-replace="true">
                        <span for="IdFuenteExterna" class=""></span>
                    </span>
                </div>
            </div>
            @*Indicador*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdIndicadorExterno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="IdIndicadorExterno" id="IdIndicadorExterno" class="form-control required">
                        <option value>Seleccione</option>
                        @foreach (var item in ViewBag.IndicadorExterno)
                        {
                            <option hidden value="@item.IdIndicadorExterno" data-fuente-externa="@item.IdFuenteExterna">@item.Nombre</option>
                        }
                    </select>
                    <span class="text-danger field-validation-error" data-valmsg-for="IdIndicadorExterno" data-valmsg-replace="true">
                        <span for="IdIndicadorExterno" class=""></span>
                    </span>
                </div>
            </div>
            @*Periodicidad*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdPeridiocidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdPeridiocidad", new SelectList(ViewBag.Periodicidades, "IdPeridiocidad", "DescPeriodicidad"),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdPeridiocidad, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Zona*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdZonaIndicadorExterno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdZonaIndicadorExterno", new SelectList(ViewBag.Zona, "IdZonaIndicadorExterno", "DescZonaIndicadorExterno"),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdZonaIndicadorExterno, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Region*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdRegionIndicadorExterno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdRegionIndicadorExterno", new SelectList(ViewBag.Region, "IdRegionIndicadorExterno", "DescRegionIndicadorExterno"),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdRegionIndicadorExterno, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Anio*@
            <div class="form-group">
                @Html.LabelFor(model => model.Anno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Anno", new SelectList(ViewBag.Anio, Model),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Anno, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Trimestre*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdTrimestre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdTrimestre", new SelectList(ViewBag.Trimestre, "IdTrimestre", "Nombre"),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTrimestre, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Canton*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdCanton, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdCanton", new SelectList(ViewBag.Canton, "IdCanton", "Nombre"),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdCanton, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Genero*@
            <div class="form-group">
                @Html.LabelFor(model => model.IdGenero, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdGenero", new SelectList(ViewBag.Genero, "IdGenero", "Descripcion"),
                     "Seleccione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Valor*@
            <div class="form-group tipoExterno">
                @Html.LabelFor(model => model.ValorIndicador, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ValorIndicador, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValorIndicador, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Error*@
            <div class="form-group">
                <div class="alert alert-danger" hidden role="alert" name="error">
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-success" alt="Crear" title="Crear" />
                    @Html.ActionLink("Cancelar", "Index", "RegistroIndicadorExterno", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </form>
}
@section scripts{    
    @Scripts.Render("~/Scripts/FuenteExterna/IndicadorExterno/functions.js")
    <script>
    RequiredMessage = "@GB.SUTEL.Entities.Metadata.EntityErrors.Requerido";
    IntLengthMessage = "@GB.SUTEL.Entities.Metadata.EntityErrors.IntLength";
        InvalidDoubleFormat = "@GB.SUTEL.Entities.Metadata.EntityErrors.InvalidDoubleFormat";
        jQuery.extend(jQuery.validator.messages, {
            required: RequiredMessage
        });
        
        $("#IdPeridiocidad option:contains('Anual')").attr('selected', 'selected');        
    </script>
}
