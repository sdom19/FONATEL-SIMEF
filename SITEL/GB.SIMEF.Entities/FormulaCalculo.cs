//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GB.SIMEF.Entities
{
    using GB.SIMEF.Resources;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Text;

    [Table("FormulaCalculo")]
    public partial class FormulaCalculo
    {

        public FormulaCalculo()
        {
            ListaCategoriasNivelesCalculo = new List<FormulaNivelCalculoCategoria>();
            IdIndicador = 0;
            IdDetalleIndicadorVariable = 0;
            IdFrecuenciaEnvio = 0;
        }

        [Key]
        public int IdFormulaCalculo { get; set; }

        [MaxLength(30)]
        public string Codigo { get; set; }

        [MaxLength(300)]
        public string Nombre { get; set; }

        public int? IdIndicador { get; set; }
        public int? IdDetalleIndicadorVariable { get; set; }
        public int? IdFrecuenciaEnvio { get; set; }

        [MaxLength(1500)]
        [DataType(DataType.MultilineText)]
        public string Descripcion { get; set; }

        public bool NivelCalculoTotal { get; set; }
        public string UsuarioModificacion { get; set; }
        public int IdEstadoRegistro { get; set; }

        //public DateTime FechaCalculo { get; set; }
        public Nullable<System.DateTime> FechaCreacion { get; set; }
        public string UsuarioCreacion { get; set; }
        public Nullable<System.DateTime> FechaModificacion { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<DateTime> FechaCalculo { get; set; }

        [MaxLength(8000)]
        public string Formula { get; set; } // ( {0} / {1} ) * 2

        public Guid? IdJob { get; set; }

        #region Variable fuera del modelo
        [NotMapped]
        public string id { get; set; }

        [NotMapped]
        public string IdIndicadorSalidaString { get; set; }

        [NotMapped]
        public string IdVariableDatoString { get; set; }

        [NotMapped]
        public string IdFrecuenciaString { get; set; }

        [NotMapped]
        public List<FormulaNivelCalculoCategoria> ListaCategoriasNivelesCalculo { get; set; }

        [NotMapped]
        public EstadoRegistro EstadoRegistro { get; set; }

        [NotMapped]
        public bool EsGuardadoParcial { get; set; }

        [NotMapped]
        public Indicador IndicadorSalida { get; set; }

        [NotMapped]
        public DetalleIndicadorVariable VariableSalida { get; set; }

        [NotMapped]
        public FrecuenciaEnvio FrecuenciaEnvio { set; get; }

        [NotMapped]
        public int Accion{ set; get; }

        [NotMapped]
        public string EtiquetaFormulaConArgumentos { get; set; } // se utiliza para visualizar la fórmula tipo: ( { Cod 12 - cantidad torres } / { Cod 97 - Cantidad torres instaladas } ) * 2

        [NotMapped]
        public string IdFormulaAClonarString { get; set; }
        [NotMapped]
        public int IdFormulaAClonar { get; set; }
        #endregion


        public override string ToString()
        {
            StringBuilder json = new StringBuilder();
            json.Append("{\"Código\":\"").Append(this.Codigo).Append("\",");
            json.Append("\"Nombre de la fórmula\":\"").Append(this.Nombre).Append("\",");
            json.Append("\"Frecuencia de aplicación\":\"").Append(this.FrecuenciaEnvio?.Nombre).Append("\",");
            json.Append("\"Descripción\":\"").Append(this.Descripcion).Append("\",");
            json.Append("\"Indicador de salida\":\"").Append(this.IndicadorSalida?.Nombre).Append("\",");
            json.Append("\"Variable-dato de salida\":\"").Append(this.VariableSalida?.NombreVariable).Append("\",");
            json.Append("\"Fórmula\":\"").Append(this.EtiquetaFormulaConArgumentos).Append("\",");

            switch (this.IdEstadoRegistro)
            {
                case (int)Constantes.EstadosRegistro.Desactivado:
                    json.Append("\"Estado\":\"").Append(Enum.GetName(typeof(Constantes.EstadosRegistro), (int)Constantes.EstadosRegistro.Desactivado)).Append("\"}");
                    break;
                case (int)Constantes.EstadosRegistro.Activo:
                    json.Append("\"Estado\":\"").Append(Enum.GetName(typeof(Constantes.EstadosRegistro), (int)Constantes.EstadosRegistro.Activo)).Append("\"}");
                    break;
                case (int)Constantes.EstadosRegistro.Eliminado:
                    json.Append("\"Estado\":\"").Append(Enum.GetName(typeof(Constantes.EstadosRegistro), (int)Constantes.EstadosRegistro.Eliminado)).Append("\"}");
                    break;
                case (int)Constantes.EstadosRegistro.EnProceso:
                    json.Append("\"Estado\":\"").Append(Enum.GetName(typeof(Constantes.EstadosRegistro), (int)Constantes.EstadosRegistro.EnProceso)).Append("\"}");
                    break;
            }

            return json.ToString();
        }

        /// <summary>
        /// 09/02/2023
        /// José Navarro Acuña
        /// Clona el objeto. 
        /// Los tipos de datos por medio de referencia se conservan y apuntan a la misma dirección en memoria
        /// </summary>
        /// <returns></returns>
        public FormulaCalculo Shallowcopy()
        {
            return (FormulaCalculo) this.MemberwiseClone();
        }
    }
}
