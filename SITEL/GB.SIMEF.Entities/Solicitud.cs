//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GB.SIMEF.Entities
{
    using GB.SIMEF.Resources;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Text;

    [Table("Solicitud")]
    public partial class Solicitud
    {
       
        public Solicitud()
        {
           
        }
        [Key] 
        public int idSolicitud { get; set; }
        public string Codigo { get; set; }
        public string Nombre { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> FechaInicio { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> FechaFin { get; set; }

        public int CantidadFormularios { get; set; }

        [DataType(DataType.MultilineText)]
        public string Mensaje { get; set; }
        public Nullable<System.DateTime> FechaCreacion { get; set; }
        public string UsuarioCreacion { get; set; }
        public Nullable<System.DateTime> FechaModificacion { get; set; }
        public string UsuarioModificacion { get; set; }
        public int idFuente { get; set; }
        public int idMes { get; set; }
        public int idAnno { get; set; }
        public int IdEstado { get; set; }

        #region variables que no están en el contexto

        [NotMapped]

        public string id { get; set; }

        [NotMapped]

        public string Formularioid { get; set; }

        [NotMapped]

        public EstadoRegistro Estado { get; set; }


        [NotMapped]

        public FuenteRegistro Fuente { get; set; }

        [NotMapped]
        public List<FormularioWeb> FormularioWeb { get; set; }

        [NotMapped]
        public SolicitudEnvioProgramado EnvioProgramado { get; set; }
        [NotMapped]
        public List<DetalleSolicitudFormulario> SolicitudFormulario { get; set; }

        [NotMapped]
        public string FormulariosString { get; set; }

        [NotMapped]
        public Mes Mes { get; set; }
        [NotMapped]
        public Anno Anno { get; set; }


        #endregion

        public override string ToString()
        {
            StringBuilder json = new StringBuilder();
            json.Append("{\"Código\":\"").Append(this.Codigo).Append("\",");
            json.Append("\"Nombre\":\"").Append(this.Nombre).Append("\",");
            json.Append("\"Fecha de inicio\":\"").Append(this.FechaInicio).Append("\",");
            json.Append("\"Fecha de fin\":\"").Append(this.FechaFin).Append("\",");
            json.Append("\"Fuente\":\"").Append(this.Fuente.Fuente).Append("\",");
            json.Append("\"Cantidad de formularios\":").Append(this.CantidadFormularios).Append(",");
            json.Append("\"Mes de registro\":\"").Append(this.Mes.Nombre.Trim()).Append("\",");
            json.Append("\"Año de registro\":\"").Append(this.Anno.Nombre).Append("\",");
            json.Append("\"Mensaje\":\"").Append(this.Mensaje).Append("\",");

            string estado = string.Empty;
            switch (this.Estado.IdEstadoRegistro)
            {
                case (int)Constantes.EstadosRegistro.Desactivado:
                    estado = Enum.GetName(typeof(Constantes.EstadosRegistro), this.Estado.IdEstadoRegistro);
                    break;
                case (int)Constantes.EstadosRegistro.Activo:
                    estado = Enum.GetName(typeof(Constantes.EstadosRegistro), this.Estado.IdEstadoRegistro);
                    break;
                case (int)Constantes.EstadosRegistro.Eliminado:
                    estado = Enum.GetName(typeof(Constantes.EstadosRegistro), this.Estado.IdEstadoRegistro);
                    break;
                case (int)Constantes.EstadosRegistro.EnProceso:
                    estado = "En Proceso";
                    break;
            }
            json.Append("\"Estado\":\"").Append(estado).Append("\"}");

            return json.ToString();
        }
    }
}
