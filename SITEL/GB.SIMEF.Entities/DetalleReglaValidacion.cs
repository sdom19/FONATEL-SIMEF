//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GB.SIMEF.Entities
{
    using GB.SIMEF.Resources;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Text;

    [Table("DetalleReglaValidacion") ]
    public partial class DetalleReglaValidacion
    {   
        public DetalleReglaValidacion()
        {
            
        }

        [Key]
        public int idDetalleReglaValidacion { get; set; }
        public int idReglaValidacion { get; set; }
        public int idTipoReglaValidacion { get; set; }
        public int idOperadorAritmetico { get; set; }
        public int idDetalleIndicadorVariable { get; set; }
        public int idIndicador { get; set; }
        public bool Estado { get; set; }
    
        [NotMapped]
        public string id { get; set; }

        [NotMapped]
        public int idCompara { get; set; }

        [NotMapped]
        public string idIndicadorVariableString { get; set; }
        
        [NotMapped]
        public string idIndicadorString { get; set; }
        
        [NotMapped]
        public string idDetalleReglaString { get; set; }

        [NotMapped]
        public ReglaValidacion reglaValidacion { get; set; }
        
        [NotMapped]
        public virtual TipoReglaValidacion tipoReglaValidacion { get; set; }
        
        [NotMapped]
        public virtual OperadorAritmetico operadorArismetico { get; set; }
        
        [NotMapped]
        public virtual DetalleIndicadorVariable detalleIndicadorVariables { get; set; }


        [NotMapped]
        public ReglaAtributoValido reglaAtributoValido { get; set; }

        [NotMapped]
        public virtual ReglaComparacionConstante reglaComparacionConstante { get; set; }
        
        [NotMapped]
        public virtual ReglaSecuencial reglaSecuencial { get; set; }
        
        [NotMapped]
        public virtual ReglaIndicadorSalida reglaIndicadorSalida { get; set; }
        
        [NotMapped]
        public virtual ReglaIndicadorEntrada reglaIndicadorEntrada { get; set; }
        
        [NotMapped]
        public virtual ReglaIndicadorEntradaSalida reglaIndicadorEntradaSalida { get; set; }

        [NotMapped]
        public string  NombreVariable { get; set; }

        [NotMapped]
        public Indicador Indicador { get; set; }

        [NotMapped]
        public DetalleIndicadorVariable IndicadorVariable { get; set; }

        [NotMapped]
        public CategoriaDesagregacion CategoriaDesagregacion { get; set; }

        [NotMapped]
        public string AtributosValidos { get; set; }

        public override string ToString()
        {
            StringBuilder json = new StringBuilder();
            json.Append("{\"Tipo de regla\":\"").Append(this.tipoReglaValidacion.Nombre).Append("\",");
            switch (this.idTipoReglaValidacion)
            {
                case (int)Constantes.TipoReglasDetalle.FormulaActualizacionSecuencial:
                    json.Append("\"Categoría actualizable\":\"").Append(this.CategoriaDesagregacion.NombreCategoria).Append("\",");
                    //json.Append("\"Variable dato\":\"").Append(this.NombreVariable).Append("\",");
                    break;
                case (int)Constantes.TipoReglasDetalle.FormulaContraConstante:
                    json.Append("\"Valor constante\":\"").Append(this.reglaComparacionConstante.Constante).Append("\",");
                    json.Append("\"Variable dato\":\"").Append(this.NombreVariable).Append("\",");
                    break;
                case (int)Constantes.TipoReglasDetalle.FormulaContraAtributosValidos:
                    json.Append("\"Categoría id comparación\":\"").Append(this.CategoriaDesagregacion.NombreCategoria ).Append("\",");
                    json.Append("\"Categoría atributo\":\"").Append(this.AtributosValidos).Append("\",");
                    break;
                case (int)Constantes.TipoReglasDetalle.FormulaContraOtroIndicadorSalida:
                    json.Append("\"Indicador comparación\":\"").Append(this.Indicador.Nombre).Append("\",");
                    json.Append("\"Variable dato comparación\":\"").Append(this.IndicadorVariable.NombreVariable).Append("\",");
                    json.Append("\"Variable dato\":\"").Append(this.NombreVariable).Append("\",");
                    break;
                case (int)Constantes.TipoReglasDetalle.FormulaContraOtroIndicadorEntrada:
                    json.Append("\"Indicador comparación\":\"").Append(this.Indicador.Nombre).Append("\",");
                    json.Append("\"Variable dato comparación\":\"").Append(this.IndicadorVariable.NombreVariable).Append("\",");
                    json.Append("\"Variable dato\":\"").Append(this.NombreVariable).Append("\",");
                    break;
                case (int)Constantes.TipoReglasDetalle.FormulaContraOtroIndicadorEntradaSalida:
                    json.Append("\"Indicador comparación\":\"").Append(this.Indicador.Nombre).Append("\",");
                    json.Append("\"Variable dato comparación\":\"").Append(this.IndicadorVariable.NombreVariable).Append("\",");
                    json.Append("\"Variable dato\":\"").Append(this.NombreVariable).Append("\",");
                    break;
                case (int)Constantes.TipoReglasDetalle.FormulaCambioMensual:
                    json.Append("\"Variable dato\":\"").Append(this.NombreVariable).Append("\",");
                    break;
            }
            //json.Append("\"Codigo\":\"").Append(this.reglaValidacion.Codigo).Append("\",");
            json.Append("\"Operador\":\"").Append(this.operadorArismetico.Nombre).Append("\"}");
            string resultado = json.ToString();

            return resultado;
        }
    }
}
