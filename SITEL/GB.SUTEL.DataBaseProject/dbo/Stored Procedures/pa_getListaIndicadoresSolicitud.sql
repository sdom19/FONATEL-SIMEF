-- =============================================
-- Author:		Grupo Babel
-- Create date: 10/03/2015
-- Description:	Consulta indicadores para la solicitud  
-- =============================================
CREATE PROCEDURE [dbo].[pa_getListaIndicadoresSolicitud]
	@IdOperador VARCHAR(50),
	@IdDireccion INT,
	@IdFrecuencia INT,
	@Filtrado bit,
	@DescripcionIndicador VARCHAR(250),
	@IdServicio INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	IF(@Filtrado = 1 AND @IdOperador = 0)
	BEGIN
		SELECT A.IDINDICADOR,
				   B.IDCONSTRUCTOR, 
				   A.NOMBREINDICADOR,
				   D.NOMBREFRECUENCIA ,
				   DE.NOMBREFRECUENCIA as NOMBREDESGLOSE
			  FROM INDICADOR A

		INNER JOIN   CONSTRUCTOR B 

				ON B.IDINDICADOR = A.IDINDICADOR 

		INNER JOIN   INDICADORDIRECCION C

				ON C.IDINDICADOR = A.IDINDICADOR AND C.IDDIRECCION = @IdDireccion

		LEFT JOIN    FRECUENCIA DE

				ON DE.IDFRECUENCIA = B.IDDESGLOSE

		LEFT JOIN    FRECUENCIA D 

			    ON D.IDFRECUENCIA = B.IDFRECUENCIA AND B.IDFRECUENCIA = @IdFrecuencia
		
				 WHERE A.BORRADO = 0 AND
				   B.BORRADO = 0 AND
				   A.NOMBREINDICADOR LIKE '%'+ @DescripcionIndicador + '%' 
				
	END
	ELSE IF(@Filtrado = 1 AND @IdOperador = 1) 
	BEGIN
		SELECT A.IDINDICADOR, 
				   A.NOMBREINDICADOR,
				   B.IDCONSTRUCTOR,  
				   D.NOMBREFRECUENCIA,
				   DE.NOMBREFRECUENCIA as NOMBREDESGLOSE
			  FROM INDICADOR A
		INNER JOIN CONSTRUCTOR B 
				ON B.IDINDICADOR = A.IDINDICADOR 
		INNER JOIN SOLICITUDCONSTRUCTOR F 
				ON B.IDCONSTRUCTOR = F.IDCONSTRUCTOR AND F.IDOPERADOR = @IdOperador
		INNER JOIN INDICADORDIRECCION C 
				ON C.IDINDICADOR = A.IDINDICADOR AND C.IDDIRECCION = @IdDireccion
		LEFT JOIN FRECUENCIA DE
				ON DE.IDFRECUENCIA = B.IDDESGLOSE
		LEFT JOIN FRECUENCIA D 
				ON D.IDFRECUENCIA = B.IDFRECUENCIA AND B.IDFRECUENCIA = @IdFrecuencia

			 WHERE A.BORRADO = 0 AND B.BORRADO = 0 AND
				   A.NOMBREINDICADOR LIKE '%'+ @DescripcionIndicador + '%' 
				
	END
	ELSE
	BEGIN

		--listado completo
		IF(@IdOperador = 0 OR @IdOperador is null)
		BEGIN
			SELECT A.IDINDICADOR,
				   B.IDCONSTRUCTOR, 
				   A.NOMBREINDICADOR,
				   D.NOMBREFRECUENCIA ,
				   DE.NOMBREFRECUENCIA as NOMBREDESGLOSE
			  FROM INDICADOR A
		INNER JOIN CONSTRUCTOR B 
				ON B.IDINDICADOR = A.IDINDICADOR 
		INNER JOIN INDICADORDIRECCION C
				ON C.IDINDICADOR = A.IDINDICADOR AND C.IDDIRECCION = @IdDireccion
		LEFT JOIN FRECUENCIA DE
				ON DE.IDFRECUENCIA = B.IDDESGLOSE
		 INNER JOIN FRECUENCIA D 
				ON D.IDFRECUENCIA = B.IDFRECUENCIA AND B.IDFRECUENCIA = @IdFrecuencia
				      INNER JOIN SERVICIOINDICADOR SI

		        ON SI.IdIndicador = C.IdIndicador
			 WHERE A.BORRADO = 0 AND
				   B.BORRADO = 0 AND
				   SI.IdServicio =  CASE @IdServicio 
				                    WHEN 0 THEN SI.IdServicio 
									ELSE @IdServicio
									END
		END
		ELSE
		BEGIN
			SELECT A.IDINDICADOR, 
				   A.NOMBREINDICADOR,
				   B.IDCONSTRUCTOR,  
				   D.NOMBREFRECUENCIA,
				   DE.NOMBREFRECUENCIA as NOMBREDESGLOSE
			  FROM INDICADOR A
		INNER JOIN CONSTRUCTOR B 
				ON B.IDINDICADOR = A.IDINDICADOR 
		INNER JOIN SOLICITUDCONSTRUCTOR F 
				ON B.IDCONSTRUCTOR = F.IDCONSTRUCTOR AND F.IDOPERADOR = @IdOperador
		INNER JOIN INDICADORDIRECCION C 
				ON C.IDINDICADOR = A.IDINDICADOR AND C.IDDIRECCION = @IdDireccion
		LEFT JOIN FRECUENCIA DE
				ON DE.IDFRECUENCIA = B.IDDESGLOSE
		INNER JOIN FRECUENCIA D 
				ON D.IDFRECUENCIA = B.IDFRECUENCIA AND B.IDFRECUENCIA = @IdFrecuencia
				     
			 WHERE A.BORRADO = 0 AND B.BORRADO = 0 
		END
		END
END